define(["backbone","script/app/menuview.js","script/app/gameview.js","script/app/gamemodel.js"],function(e,t,n,r){return e.Router.extend({gameView:null,gameModel:null,menuView:null,invalidMode:!1,routes:{"":"index","play/:text":"play","*invalid":"invalid"},index:function(){this.menuView.getIsRendered()||this.menuView.render(),this.menuView.setIsInGame(!1)},play:function(e){this.gameModel.set("mode",e,{validate:!0}),this.invalidMode?this.invalidMode=!1:(this.menuView.setIsInGame(!0),this.gameModel.get("storedWords")<1?(this.gameModel.listenToOnce(this.gameModel,"wordsLoaded",function(){this.startNewGame()}),this.gameModel.getWordList()):this.gameModel.startNewGame())},invalid:function(){alert("Sorry, redirecting you to menu.\nYOU'VE made a mistake."),this.invalidMode=!0,this.menuView.setIsInGame(!1),this.navigate("/",{trigger:!0})},onLocationChange:function(e){this.navigate(e,{trigger:!0})},onFinishedGame:function(){this.navigate("/",{trigger:!0})},initialize:function(){this.gameModel=new r({router:this}),this.gameView=new n({model:this.gameModel}),this.menuView=new t,this.listenTo(this.gameModel,"modeerror",this.invalid),this.listenTo(this.menuView,"location",this.onLocationChange),this.listenTo(this.gameModel,"finishedgame",this.onFinishedGame),e.history.start(),this.menuView.getIsRendered()||this.menuView.render(),this.gameView.getIsRendered()||this.gameView.render()}})});